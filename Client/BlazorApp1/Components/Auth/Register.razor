@page "/register"
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager navMgr

<div class="login-container">
    <div class="login-box">
        <h3>Register</h3>
        <label>Username:</label>
        <input type="text" @bind="username" />
        <label>Password:</label>
        <input type="password" @bind="password" />
        <label>Confirm Password:</label>
        <input type="password" @bind="confirmPassword" />
        @if (!string.IsNullOrEmpty(errorLabel)) {
            <label class="error-label">
                @errorLabel
            </label>
        }
        <div class="button-container">
            <button @onclick="RegisterAsync">Register</button>
            <button @onclick="Cancel">Cancel</button>
        </div>
    </div>
</div>

@code {
    private string username;
    private string password;
    private string confirmPassword;
    private string errorLabel;

    private async Task RegisterAsync()
    {
        errorLabel = "";
        if (password != confirmPassword)
        {
            errorLabel = "Passwords do not match.";
            return;
        }

        try
        {
            await ((SimpleAuthProvider)AuthProvider).Register(username, password);
            navMgr.NavigateTo("/");
            navMgr.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            errorLabel = ex.Message;
        }
    }

    private void Cancel()
    {
        navMgr.NavigateTo("/login");
    }
}